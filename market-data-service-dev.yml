spring:
  datasource:
    url: jdbc:h2:mem:marketdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password:

  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: false

  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql

# Provider 설정은 기본 설정(market-data-service.yml) 사용
# Dev 환경에서 다른 provider를 테스트하려면 여기에 오버라이드 추가

keycloak:
  resource: muscat-user-cc

marketdata:
  # 자동 초기화 설정 (서비스 시작 시 랜덤 종목 추가 및 데이터 수집)
  auto-init:
    enabled: ${MARKETDATA_AUTO_INIT:true}

  constants:
    fx:
      default-base-rate: ${FX_DEFAULT_RATE:1350}
      scale: ${FX_SCALE:6}
      max-fallback-days: ${FX_FALLBACK_DAYS:7}
    batch:
      min-rpm: ${BATCH_MIN_RPM:1}
      max-backoff-ms: ${BATCH_MAX_BACKOFF:30000}
      millis-per-minute: 60000
    database:
      symbol-max-length: 16
      currency-length: 3
      decimal-precision: 19
      decimal-scale: 8
    calculation:
      percent-scale: 4
      percentage-multiplier: 100

    fx-ingest:
      backfill:
        enabled: ${FX_BACKFILL_ENABLED:false}
        lookback-days: ${FX_BACKFILL_LOOKBACK:365}
      incremental:
        enabled: ${FX_INCREMENTAL_ENABLED:true}
        default-days: ${FX_INCREMENTAL_DAYS:30}
      scheduler:
        enabled: ${FX_SCHEDULER_ENABLED:false}
        cron: ${FX_SCHEDULER_CRON:0 10 11 * * MON-FRI}
        zone: ${FX_SCHEDULER_ZONE:Asia/Seoul}

  # Data collection (Legacy - Deprecated)
  feed:
    symbol:
      enabled: ${SYMBOL_COLLECTION_ENABLED:false}  # Deprecated: Kafka 이벤트 방식 사용
      startup-delay: ${SYMBOL_STARTUP_DELAY:30}
    schedule:
      enabled: ${SCHEDULE_ENABLED:false}
      cron: ${SCHEDULE_CRON:0 0 5 * * *}
      timezone: ${SCHEDULE_TIMEZONE:America/New_York}
      lookback-days: ${SCHEDULE_LOOKBACK:365}

  # Market cap based symbol collection (Alpha Vantage API)
  top-stocks:
    count: ${TOP_STOCKS_COUNT:10}  # 시가총액 상위 주식 개수 (테스트용)
  top-etfs:
    count: ${TOP_ETFS_COUNT:1}    # 시가총액 상위 ETF 개수 (테스트용)
  marketcap-collection:
    enabled: ${MARKETCAP_COLLECTION_ENABLED:true}  # 시가총액 기반 종목 수집 활성화
    data-collection-enabled: ${DATA_COLLECTION_ENABLED:true}  # 수집 후 Kafka 이벤트 발행 여부
    lookback-days: ${LOOKBACK_DAYS:365}  # 과거 데이터 수집 기간 (일)

  # Symbol loader (NASDAQ API 또는 CSV 파일 기반 종목 로드)
  # Alpha Vantage 사용 시 비활성화 - 관리자 페이지에서 수동으로 종목 추가
  symbol-loader:
    enabled: ${SYMBOL_LOADER_ENABLED:false}  # 종목 로더 비활성화
    use-api: ${SYMBOL_LOADER_USE_API:false}  # NASDAQ API 비활성화
    market-cap-filter: ${SYMBOL_LOADER_MARKET_CAP_FILTER:mega,large}  # 시가총액 필터 (mega,large,mid,small,micro)
    collect-data: ${SYMBOL_LOADER_COLLECT_DATA:false}  # 로드 후 즉시 데이터 수집 비활성화
    lookback-days: ${SYMBOL_LOADER_LOOKBACK_DAYS:365}  # 과거 데이터 수집 기간 (일)
    include-dividends: ${SYMBOL_LOADER_INCLUDE_DIVIDENDS:true}  # 배당 데이터 포함 여부

  # Market cap update scheduler (시가총액 매일 업데이트)
  market-cap-scheduler:
    enabled: ${MARKET_CAP_SCHEDULER_ENABLED:true}  # 시가총액 스케줄러 활성화
    cron: ${MARKET_CAP_SCHEDULER_CRON:0 0 10 * * *}  # 매일 오전 10시 (미국 동부 시간)
    timezone: ${MARKET_CAP_SCHEDULER_TIMEZONE:America/New_York}

  # Cache
  cache:
    price-data-ttl: ${CACHE_PRICE_TTL:300}
    fx-rate-ttl: ${CACHE_FX_TTL:3600}
    symbol-info-ttl: ${CACHE_SYMBOL_TTL:86400}
    dividend-ttl: ${CACHE_DIVIDEND_TTL:86400}


management:
  server:
    port: 9090
  endpoints:
    web:
      base-path: /
      exposure:
        include: health,info,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
